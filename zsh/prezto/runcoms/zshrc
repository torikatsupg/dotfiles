#
# Executes commands at the start of an interactive session.
#
# Authors:
#   Sorin Ionescu <sorin.ionescu@gmail.com>
#

# Source Prezto.
if [[ -s "${ZDOTDIR:-$HOME}/.zprezto/init.zsh" ]]; then
  source "${ZDOTDIR:-$HOME}/.zprezto/init.zsh"
fi

# java setting
# ```
# $ /usr/libexec/java_home -V` # show installed versions
# ```
export JAVA_HOME=`/usr/libexec/java_home -v 15.0.2` # java15

# export JAVA_HOME=`/usr/libexec/java_home -v 1.8.0_282` # java8
# android studio setting
export ANDROID_HOME=$HOME/Library/Android/sdk
typeset -U path PATH

path=(
  /usr/local/bin/brew(N-/) # homebrew path
  /opt/homebrew/bin(N-/) # homebrew path
	$HOME/.nodenv/bin(N-/) # nodenv path
	$HOME/development/flutter/bin(N-/) # flutter path
  $ANDROID_HOME/platform-tools(N-/)
  $ANDROID_HOME/emulator(N-/)
	/usr/local/bin(N-/)
	$path
)

# nodenv setting
eval "$(nodenv init -)"

# rbenv setting
eval "$(rbenv init -)"

# apply pure zsh theme
autoload -Uz promptinit
prompt pure

# GCP setting
export CLOUDSDK_PYTHON_SITEPACKAGES=1

# no beep
setopt no_beep
setopt nolistbeep

# history settings
HISTFILE=$HOME/.zsh_history
HISTSIZE=100000
SAVEHIST=10000000
setopt EXTENDED_HISTORY
setopt hist_expand
setopt hist_ignore_all_dups
setopt hist_ignore_space
setopt hist_reduce_blanks
setopt hist_save_no_dups
setopt hist_verify
setopt inc_append_history
setopt share_history 

# joke
alias emacs="echo No way! Use V . I . M!!"

# peco setting
## base
function peco-history-selection() {
    BUFFER=`history -n 1 | tail -r  | awk '!a[$0]++' | peco`
    CURSOR=$#BUFFER
    zle reset-prompt
}

zle -N peco-history-selection

## cdr
if [[ -n $(echo ${^fpath}/chpwd_recent_dirs(N)) && -n $(echo ${^fpath}/cdr(N)) ]]; then
    autoload -Uz chpwd_recent_dirs cdr add-zsh-hook
    add-zsh-hook chpwd chpwd_recent_dirs
    zstyle ':completion:*' recent-dirs-insert both
    zstyle ':chpwd:*' recent-dirs-default true
    zstyle ':chpwd:*' recent-dirs-max 1000
    zstyle ':chpwd:*' recent-dirs-file "$HOME/.cache/chpwd-recent-dirs"
fi
function peco-cdr () {
  local selected_dir="$(cdr -l | sed 's/^[0-9]\+ \+//' | peco --prompt="cdr >" --query "$LBUFFER")"
  if [ -n "$selected_dir" ]; then
    BUFFER="cd `echo $selected_dir | awk '{print$2}'`"
    CURSOR=$#BUFFER
    zle reset-prompt
  fi
}
zle -N peco-cdr
if type trash-put &> /dev/null
then
    alias rm=trash-put
fi

# memo
function write-memo() {
  MEMO_HOME=~/memo
  if [[ ! -e $MEMO_HOME ]]; then
    mkdir $MEMO_HOME -P
  fi
  vim $MEMO_HOME/$(date +\%Y_\%m_\%d).md
  date +\%Y_\%m_\%d
}
alias memo=write-memo

# git alias
alias gis="git status"
alias gic="git commit -m $@"
alias gip="git push -u origin $@"
alias gipf="git push --force-with-lease -u origin $@"
alias gia="git add"
alias giaa="git add -A"
alias girm="git reset --mixed"
alias gitclear="git reset --hart HEAD"
alias gib="git branch"

# placehold.jp
# @param
# $1 = image height
# $2 = image width
# $3 = output directory. "." is default
# $4 = png | jpg, "png" is default
function getPlaceholderImage() {
  if [ $# -lt 2 ]; then
    echo "you must specify arguments.\n
    \$1: width\n
    \$2: height\n
    \$3: directory, '.' is default\n
    \$4: extension, 'png' is default\n"
  else
    filename="${1}x${2}.${4:=png}"
    directory=$3
    echo "download $filename to $directory"
    curl -o  "${directory}/${filename}" "https://placehold.jp/${filename}"
  fi
}
alias getdummy="getPlaceholderImage"

# search google from terminal
ggl() {
   open "https://google.co.jp/search?q=${*// /+}"
}

# open url with iphone simulator
function open_deep_link () {
  xcrun simctl openurl $(xcrun simctl list | grep Booted | grep -i $1 | awk 'NR==1{print $(NF-1)}' | sed -E "s/[()]//g") $2
}
alias deeplink=open_deep_link

function start_android_emulator() {
  emulator -avd $(emulator -list-avds | head -n1) &>/dev/null &
}
alias avd=start_android_emulator

# for vscode-insiders
alias code=code-insiders

# Yank to the system clipboard for vi keybind
function vi-yank-xclip {
  zle vi-yank
  echo "$CUTBUFFER" | pbcopy
}
zle -N vi-yank-xclip

# key binds
## emacs like bind
bindkey -v
bindkey -M viins "^A" beginning-of-line
bindkey -M viins "^B" backward-char
bindkey -M viins "^D" delete-char-or-list
bindkey -M viins "^E" end-of-line
bindkey -M viins "^F" forward-char
bindkey -M viins "^H" backward-delete-char
bindkey -M viins "^K" kill-line
bindkey -M viins "^N" down-line-or-history
bindkey -M viins "^P" up-line-or-history
bindkey -M viins "^U" backward-kill-line
bindkey -M viins "^W" backward-kill-word
bindkey -M vicmd 'y' vi-yank-xclip

## custom function bind 
bindkey -M viins '^R' peco-history-selection
bindkey -M vicmd '^R' peco-history-selection
bindkey -M viins '^G' peco-cdr
bindkey -M vicmd '^G' peco-cdr

